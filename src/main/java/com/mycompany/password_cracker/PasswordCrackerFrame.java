/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.password_cracker;

import javax.swing.*;
import java.io.File;

import javax.swing.SwingUtilities;
import java.io.*;
import java.util.*;
import java.util.zip.CRC32;
import javax.swing.SwingUtilities;

import net.lingala.zip4j.ZipFile;
import net.lingala.zip4j.model.FileHeader;





/**
 *
 * @author Ashmit Sharma
 */
public class PasswordCrackerFrame extends javax.swing.JFrame {

    /**
     * Creates new form PasswordCrackerFrame
     */
    public PasswordCrackerFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select_File");

        jLabel2.setText("Result");

        jTextField1.setEditable(false);

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ZIP ", "RAR ", "7Z" }));
        jComboBox1.setSelectedItem(new String[] { "ZIP", "RAR", "7Z" });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jButton3)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(76, 76, 76)
                .addComponent(jLabel2)
                .addContainerGap(329, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            jTextField1.setText(selectedFile.getAbsolutePath());
            jLabel2.setText("Result: "); // Reset result label
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String filePath = jTextField1.getText().trim();

    if (filePath.isEmpty()) {
        jLabel2.setText("Result: Please select a file.");
        return;
    }

    int maximumPasswordLength = 4;
    String allCharacters = "0123456789";
    char[] characterArray = allCharacters.toCharArray();

    long calculatedTotal = 0;
    long multiplier = 1;
    for (int i = 1; i <= maximumPasswordLength; i++) {
        multiplier *= characterArray.length;
        calculatedTotal += multiplier;
    }
    final long totalCombinations = calculatedTotal;

    jButton3.setEnabled(false);
    jLabel2.setText("Result: Cracking in progress...");
    jLabel3.setText("Progress: 0 / " + totalCombinations);

    new Thread(() -> {
        final long[] totalAttempts = {0};
        final long startTime = System.currentTimeMillis();
        final String[] correctPassword = {null};

        class Cracker {
            void generatePasswords(String currentPassword) {
                if (!currentPassword.isEmpty()) {
                    totalAttempts[0]++;
                    try {
                        net.lingala.zip4j.ZipFile zipFile = new net.lingala.zip4j.ZipFile(filePath);
                        zipFile.setPassword(currentPassword.toCharArray());

                        // Create temp dir for extraction
                        java.io.File tempDir = new java.io.File(System.getProperty("java.io.tmpdir"), "ziptest");
                        if (!tempDir.exists()) {
                            tempDir.mkdirs();
                        } else {
                            for (java.io.File f : tempDir.listFiles()) {
                                f.delete();
                            }
                        }

                        // Try extraction — if succeeds, password is correct
                        zipFile.extractAll(tempDir.getAbsolutePath());

                        correctPassword[0] = currentPassword;
                        return;

                    } catch (net.lingala.zip4j.exception.ZipException ze) {
                        // Wrong password → ignore
                    } catch (Exception e) {
                        // Ignore other extraction errors
                    }

                    if (totalAttempts[0] % 1000 == 0) {
                        long now = System.currentTimeMillis();
                        long secondsPassed = (now - startTime) / 1000;
                        double percent = (totalAttempts[0] * 100.0 / totalCombinations);
                        double speed = (secondsPassed > 0) ? totalAttempts[0] / (double) secondsPassed : 0;

                        final String status = "Progress: " + totalAttempts[0] + " / " + totalCombinations +
                                " (" + String.format("%.2f", percent) + "%)" +
                                " | Speed: " + String.format("%.1f", speed) + "/sec";

                        SwingUtilities.invokeLater(() -> jLabel3.setText(status));
                    }
                }

                if (currentPassword.length() < maximumPasswordLength && correctPassword[0] == null) {
                    for (char c : characterArray) {
                        generatePasswords(currentPassword + c);
                        if (correctPassword[0] != null) return;
                    }
                }
            }
        }

        new Cracker().generatePasswords("");

        final String resultMsg = (correctPassword[0] != null)
                ? "Result: Password found: " + correctPassword[0]
                : "Result: Password not found.";

        final String finalStatus = "Progress: " + totalAttempts[0] + " / " + totalCombinations +
                " | Done | Time: " + ((System.currentTimeMillis() - startTime) / 1000) + "s";

        SwingUtilities.invokeLater(() -> {
            jLabel2.setText(resultMsg);
            jLabel3.setText(finalStatus);
            jButton3.setEnabled(true);
        });
    }).start();
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordCrackerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordCrackerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordCrackerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordCrackerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordCrackerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
